api.title=Bar tender API
api.description=Design and implement a simple web application exposing HTTP API that simulates the bar tender service. It should:\n1.\tAccept POST requests with customer number and drink type (BEER|DRINK) and:\n\t1.\tRespond with 200 code when ordered drink will be served\n\t2.\tRespond with 429 code when order is not accepted at the moment\n2.\tKeep track of served drinks and customers and expose endpoint which lists them\n\nFunctional requirements:\n1.\tThe barman can prepare at once 2 beers (drinks of BEER type) or 1 drink (DRINK type)\n2.\tPreparing one drink takes X seconds (5 by default but value should be configurable) regardless of drink type\n3.\tDrink request should get the response as soon as barman starts to prepare a drink. It should not be delayed for the time of the drink preparation.\n\nNon-functional requirements:\n1.\tService should be idempotent\n2.\tRequests should be audited using application log\n\nAssumptions:\n1.\tWhen answering OK for a drink request the barman prepares the drink in configured time X without any further requests or notifications\n2.\tApplication runs in-memory, there is no persistent storage\n3.\tApplication runs on a single node
api.version=1.0.0-SNAPSHOT
api.repo.name=GIT Repository
api.repo.url=https://github.com/SamuelMayaMiles

api.error.400=Bad Request parameters.
api.error.404=Not Found.
api.error.429=Order cannot be accepted at this moment.
api.error.500=An Unexpected exception occurred.